{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\Attachment.svelte",
    "..\\..\\Credits.svelte",
    "..\\..\\Feed.svelte",
    "..\\..\\Filter.svelte",
    "..\\..\\Navbar.svelte",
    "..\\..\\Post.svelte",
    "..\\..\\PostLink.svelte",
    "..\\..\\Video.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import Feed from './components/Feed.svelte';\n    import Credits from './components/Credits.svelte';\n    import Navbar from './components/Navbar.svelte';\n    import Filter from './components/Filter.svelte';\n    import { getNews } from './vk/data/news';\n    import { groupBy } from './utils/groupBy';\n    import { auth, AUTH_STATUS } from './stores/auth';\n    import { news, NEWS_STATUS } from './stores/news';\n    import { isScrolledDown } from './stores/isScrolledDown';\n\n    auth.subscribe((status) => {\n        if (status === AUTH_STATUS.LOGGED_IN) {\n            news.load();\n        }\n        if (status === AUTH_STATUS.LOGGED_OUT) {\n            news.reset();\n        }\n    });\n\n    news.subscribe((n) => {\n        // console.log('n', n);\n        window.n = n;\n    });\n\n    function handleLoginClick() {\n        auth.login();\n    }\n\n    function markAllAsRead() {\n        news.markFeedSeen();\n    }\n\n    news.onFeedChanged(backToTop);\n\n    function backToTop() {\n        window.scrollTo(0, 0);\n    }\n</script>\n\n{#if !$isScrolledDown}\n<Navbar />\n{/if}\n<!-- prettier-ignore -->\n<main>\n    <div class=\"top\">\n        {#if $auth === AUTH_STATUS.LOGGED_OUT}\n            <p><button on:click={handleLoginClick}>Log in with VK</button></p>\n        {:else if $auth === AUTH_STATUS.LOGGED_IN}\n            <Feed />\n        {:else}\n            <p>Loading...</p>\n        {/if}\n    </div>\n    \n    {#if $auth === AUTH_STATUS.LOGGED_IN && \n        $news.status === NEWS_STATUS.LOADED && \n        $news.feed.length\n    }\n    <button on:click={markAllAsRead} class=\"refresh-button\">\n        Mark all as read\n    </button>\n    {/if}\n    \n    <Credits />\n\n    {#if $news.status === NEWS_STATUS.LOADED && !$isScrolledDown}\n        <Filter />\n    {/if}\n</main>\n\n<style>\n    :global(body) {\n        padding-top: 42px;\n    }\n    main {\n        padding: 8px;\n        margin: auto;\n        width: 100%;\n        max-width: 500px;\n        min-width: 300px;\n        height: 100%;\n        box-sizing: border-box;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n    .top {\n        margin-bottom: auto;\n        width: 100%;\n    }\n    .refresh-button {\n        width: 70%;\n        margin: 0.5em 0;\n        padding: 1em;\n    }\n    .refresh-icon {\n        width: 32px;\n    }\n    p {\n        text-align: center;\n    }\n</style>\n",
    "<script>\n    import PostLink from './PostLink.svelte';\n    import Photo from './Photo.svelte';\n    import Video from './Video.svelte';\n    export let att;\n    export let width;\n</script>\n\n<!-- prettier-ignore -->\n<div>\n    {#if att.type === 'photo'}\n        <Photo {width} photo={att.photo}></Photo>\n    {:else if att.type === 'video'}\n        <span>Video frame:</span>\n        <Photo {width} photo={att.video}></Photo>\n    {:else if att.type === 'doc' && att.doc.ext === 'gif'}\n        <Video {att}></Video>\n    {:else if att.type === 'doc' && att.doc.ext === 'pdf'}\n        <p>Doc: {att.doc.title}</p>\n    {:else if att.type === 'link'}\n        <PostLink {att}></PostLink>\n    {:else if att.type === 'podcast'}\n        <p>Podcast: {att.podcast.title}</p>\n    {:else if att.type === 'podcast'}\n        <p>Unsupported attachment: {JSON.stringify(att)}</p>\n    {/if}\n</div>\n\n<style>\n    p,\n    span {\n        word-break: break-word;\n        max-width: 100%;\n        font-style: italic;\n    }\n</style>\n",
    "<script></script>\n\n<!-- prettier-ignore -->\n<p class=\"credits\">\n    Icons made by\n    <a \n        href=\"https://www.flaticon.com/authors/kiranshastry\" \n        title=\"Kiranshastry\"\n    >\n        Kiranshastry\n    </a>\n    from\n    <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a>\n</p>\n\n<style>\n    .credits {\n        font-size: 0.8em;\n    }\n</style>\n",
    "<script>\n    import Post from './Post.svelte';\n    import { news, NEWS_STATUS } from '../stores/news';\n\n    $: showPostSource = $news.feedName === 'All';\n    let width;\n\n    const handler = (entries, observer) => {\n        entries.forEach((entry) => {\n            const { boundingClientRect, isIntersecting, target } = entry;\n            if (!isIntersecting && boundingClientRect.bottom <= 0) {\n                const { postUid } = target.dataset;\n                news.markSeen(postUid);\n                observer.unobserve(target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(handler, { threshold: 0 });\n</script>\n\n<style>\n    .feed {\n        width: 100%;\n    }\n    p {\n        text-align: center;\n    }\n</style>\n\n<!-- prettier-ignore -->\n<div class=\"feed\" bind:clientWidth={width}>\n    {#if $news.status === NEWS_STATUS.LOADED}\n        {#each $news.feed as post, i (post.uid)}\n            <Post {post} observer=\"{observer}\" {showPostSource} {width} />\n        {:else}\n            <p>There's nothing new in your feed! Well done!</p>\n        {/each}\n    {:else}\n        <p>Loading posts...</p>\n    {/if}\n</div>\n",
    "<script>\n    import { fly } from 'svelte/transition';\n    import { quintOut } from 'svelte/easing';\n    import { news, NEWS_STATUS } from '../stores/news';\n\n    const flyProps = {\n        y: 1000,\n        opacity: 0.5,\n        easing: quintOut,\n    };\n\n    let showButton = true;\n    function toggleShowButton() {\n        showButton = !showButton;\n    }\n\n    let selected = $news.feedName;\n    function handleFeedChange() {\n        news.setFeed(selected);\n        toggleShowButton();\n    }\n\n    function getUnseenCount(source) {\n        return $news.feeds[source].filter((post) => !post.seen).length;\n    }\n    function getUnseen(newsSource) {\n        const feeds = Object.keys(newsSource.feeds);\n        return feeds\n            .map((name) => {\n                return { name, unseen: getUnseenCount(name) };\n            })\n            .filter((f) => f.unseen > 0);\n    }\n    function refresh() {\n        news.load();\n    }\n</script>\n\n{#if showButton}\n<button\n    on:click=\"{toggleShowButton}\"\n    class=\"filter-btn shadow\"\n    transition:fly=\"{flyProps}\"\n>\n    <img class=\"filter-icon\" src=\"icons/filter.svg\" alt=\"\" />\n</button>\n{:else}\n<div class=\"paranja\" on:click=\"{toggleShowButton}\"></div>\n<div class=\"popup shadow\" transition:fly=\"{flyProps}\">\n    <div class=\"feeds\">\n        {#each getUnseen($news) as feed}\n        <label class=\"feed\">\n            <input\n                type=\"radio\"\n                bind:group=\"{selected}\"\n                value=\"{feed.name}\"\n                on:change=\"{handleFeedChange}\"\n            />\n            {feed.name} ({feed.unseen})\n        </label>\n        {:else} There's no unseen posts! {/each}\n    </div>\n    {#if !getUnseen($news).length}\n    <button on:click=\"{refresh}\" class=\"refresh\">Refresh</button>\n    {:else}\n    <button on:click=\"{toggleShowButton}\" class=\"close\">Close</button>\n    {/if}\n</div>\n{/if}\n<style>\n    .filter-btn {\n        position: fixed;\n        bottom: 25px;\n        right: 25px;\n\n        width: 64px;\n        height: 64px;\n        margin: 0;\n        border-radius: 50%;\n        padding: 1em;\n    }\n    .filter-icon {\n        width: 100%;\n    }\n    .paranja {\n        position: fixed;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n    }\n    .popup {\n        padding: 1em;\n        position: fixed;\n        bottom: 1%;\n        left: 50%;\n        transform: translateX(-50%);\n        background-color: white;\n        width: 400px;\n        max-width: 80%;\n        max-height: 60%;\n\n        display: flex;\n        flex-direction: column;\n        z-index: 1;\n    }\n    .refresh {\n        width: 100%;\n    }\n    .shadow {\n        box-shadow: 0px 0px 5px 1px rgba(0, 0, 0, 0.3);\n    }\n    .close {\n        margin-top: auto;\n    }\n    .feeds {\n        margin-bottom: 1em;\n        overflow: auto;\n    }\n    .feed {\n        text-align: center;\n        padding: 5px;\n        border: 1px solid rgb(128, 128, 128);\n        margin: 5px 0;\n        border-radius: 5px;\n    }\n    .feed:hover {\n        background-color: rgb(240, 240, 240);\n    }\n</style>\n",
    "<script>\n    import { fly } from 'svelte/transition';\n    import { quintOut } from 'svelte/easing';\n    import { auth, AUTH_STATUS } from '../stores/auth';\n    import { news, NEWS_STATUS } from '../stores/news';\n\n    const flyProps = {\n        y: -100,\n        opacity: 0.5,\n    };\n\n    $: source = $news.feedName;\n    $: readCount = $news.feed.filter((n) => n.seen).length;\n    $: totalCount = $news.feed.length;\n\n    function handleLogoutClick() {\n        if (!confirm('Are you sure?')) {\n            return;\n        }\n        auth.logout();\n    }\n</script>\n\n<!-- prettier-ignore -->\n<nav transition:fly=\"{flyProps}\">\n    {#if totalCount}\n        <span class=\"title\">\n            {source} ({readCount}/{totalCount})\n        </span>\n    {/if}\n    {#if $auth === AUTH_STATUS.LOGGED_IN}\n        <button on:click={handleLogoutClick} class=\"logout-btn\">\n            <img class=\"exit-icon\" src=\"icons/door.svg\" alt=\"\">\n        </button>\n    {/if}\n</nav>\n\n<style>\n    nav {\n        display: flex;\n        flex-direction: row;\n        justify-content: flex-end;\n        align-items: center;\n\n        background-color: #68a5eb;\n        height: 42px;\n\n        position: fixed;\n        top: 0;\n        left: 0;\n        right: 0;\n\n        z-index: 1;\n    }\n    .title {\n        margin-left: 24px;\n        margin-right: auto;\n        padding-right: 1em;\n\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        color: #fff;\n    }\n    .logout-btn {\n        margin: 0;\n        margin-right: 8px;\n        font-size: 12px;\n        height: 34px;\n        width: 34px;\n    }\n    .exit-icon {\n        height: 100%;\n    }\n</style>\n",
    "<script>\n    import { onMount, onDestroy } from 'svelte';\n    import Attachment from './Attachment.svelte';\n\n    export let post;\n    export let observer;\n    export let showPostSource;\n    export let width;\n\n    const {\n        postUrl,\n        date,\n        repost,\n        sourceName,\n        text,\n        attachments,\n        uid,\n        seen,\n    } = post;\n\n    let container;\n    onMount(() => {\n        if (!observer) return;\n        observer.observe(container);\n    });\n    onDestroy(() => {\n        if (!observer) return;\n        observer.unobserve(container);\n    });\n</script>\n\n<!-- prettier-ignore -->\n<div \n    bind:this={container} \n    class=\"post\"\n    class:seen={post.seen} \n    data-post-uid={uid}\n>\n    <div class=\"corner\">\n        {#if post.seen}\n            <img class=\"seen-icon\" src=\"./icons/eye.svg\" alt=\"\">\n        {/if}\n        <span class=\"date\">{date}</span>\n    </div>\n    {#if showPostSource}\n        <h4>{sourceName}</h4>\n    {/if}\n    {#if text}\n        <p class=\"text\">{text}</p>\n    {/if}\n    {#if attachments}\n        {#each attachments as att, i}\n           <Attachment {att} width=\"{width - 16*2}\"></Attachment>\n        {/each}\n    {/if}\n    {#if repost}\n        <div class=\"post repost\">\n            <div class=\"corner\">\n                <span class=\"date\">{repost.date}</span>\n            </div>\n            <h4>{repost.sourceName}</h4>\n            {#if repost.text}\n                <p class=\"text\">{repost.text}</p>\n            {/if}\n            {#if repost.attachments}\n                {#each repost.attachments as att, i}\n                    <Attachment {att} width=\"{width - 16*4}\"></Attachment>\n                {/each}\n            {/if}\n        </div>\n    {/if}\n    <p><a href={postUrl} target=\"_blank\">{postUrl}</a></p>\n</div>\n\n<style>\n    .post {\n        padding: 16px;\n        padding-top: 2em;\n        margin-bottom: 0.5em;\n        position: relative;\n        box-shadow: 0 0 3px rgb(128, 128, 128);\n    }\n    .text {\n        white-space: pre-wrap;\n        word-break: break-word;\n    }\n    .corner {\n        position: absolute;\n        top: 0.5em;\n        right: 0.5em;\n    }\n    .date {\n        color: #505050;\n        font-size: 0.75em;\n    }\n    .seen {\n        opacity: 0.8;\n    }\n    .seen-icon {\n        height: 0.75em;\n        width: 0.75em;\n        vertical-align: middle;\n        display: inline-block;\n    }\n</style>\n",
    "<script>\n    export let att;\n\n    let photoSrc;\n    if (att.link.photo) {\n        const photoSizes = Object.keys(att.link.photo).filter((k) =>\n            k.includes('photo')\n        );\n\n        // fixme replace with screensize based size\n        const medianQuality = Math.floor(photoSizes.length / 2);\n        photoSrc = att.link.photo[photoSizes[medianQuality]];\n    }\n</script>\n\n<!-- prettier-ignore -->\n<a href=\"{att.link.url}\" target=\"_blank\">\n    <div class=\"link\">\n        {#if photoSrc}\n            <img src=\"{photoSrc}\" alt=\"\" />\n        {/if}\n        <p>{att.link.title}</p>\n    </div>\n</a>\n\n<style>\n    img {\n        width: 100%;\n    }\n    .link {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        border: 1px solid rgba(0, 0, 0, 0.363);\n    }\n    .link img {\n        flex-shrink: 0;\n        height: 80px;\n        width: auto;\n    }\n    .link p {\n        margin: 0;\n        padding: 8px;\n    }\n</style>\n",
    "<script>\n    export let att;\n\n    // fixme choose poster based on screen size\n    const posterSrc = att.doc.preview.photo.sizes[0].src;\n    const videoSrc =\n        (att.doc.preview.video && att.doc.preview.video.src) || att.doc.url;\n</script>\n\n<style>\n    video {\n        width: 100%;\n    }\n</style>\n\n<!-- prettier-ignore -->\n<video\n    src=\"{videoSrc}\"\n    poster=\"{posterSrc}\"\n    preload=\"none\"\n    controls\n    type=\"video/mp4\"\n/>\n"
  ],
  "names": [],
  "mappings": "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"
}