{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\Attachment.svelte",
    "..\\..\\Filter.svelte",
    "..\\..\\Navbar.svelte",
    "..\\..\\Photo.svelte",
    "..\\..\\Post.svelte",
    "..\\..\\PostLink.svelte",
    "..\\..\\Video.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import Feed from './components/Feed.svelte';\n    import Credits from './components/Credits.svelte';\n    import Navbar from './components/Navbar.svelte';\n    import Filter from './components/Filter.svelte';\n    import { login, logout, getIsLoggedIn } from './vk/auth';\n    import { getNews } from './vk/data/news';\n    import { groupBy } from './utils/groupBy';\n\n    let error;\n    let isLoggedIn;\n    let source = 'All';\n    let newsBySource;\n    $: news = newsBySource && newsBySource[source];\n\n    (async () => {\n        try {\n            isLoggedIn = await getIsLoggedIn();\n            if (isLoggedIn) {\n                newsBySource = await getNews();\n                console.log('newsBySource', newsBySource);\n            }\n        } catch (e) {\n            error = e;\n        }\n    })();\n\n    async function handleLogoutClick() {\n        if (!confirm('Are you sure?')) {\n            return;\n        }\n\n        await logout();\n        isLoggedIn = false;\n        news = undefined;\n        localStorage.clear();\n    }\n\n    async function handleLoginClick() {\n        try {\n            isLoggedIn = await login();\n            if (isLoggedIn) {\n                newsBySource = await getNews();\n            }\n        } catch (e) {\n            error = e;\n        }\n    }\n\n    $: readNewsCount = news && news.filter((n) => n.seen).length;\n    function updateReadCount() {\n        newsBySource = newsBySource;\n    }\n\n    async function markAllAsReadAndRefresh() {\n        news.forEach((n) => {\n            n.markSeen();\n        });\n        refresh();\n    }\n\n    async function refresh() {\n        window.scrollTo(0, 0);\n        // news = undefined;\n        newsBySource = await getNews();\n        console.log('refresh -> newsBySource', newsBySource);\n        console.log('refresh -> newsBySource[source]', newsBySource[source]);\n        if (!newsBySource[source]) {\n            source = 'All';\n        }\n        updateReadCount();\n    }\n\n    $: showPostSource = source === 'All';\n    $: totalNewsCount = news && news.length;\n\n    function handleSourceChange(newSource) {\n        if (newSource === source) return;\n\n        source = newSource;\n        news = newsBySource[source];\n    }\n</script>\n\n<Navbar\n    {source}\n    totalCount=\"{totalNewsCount}\"\n    readCount=\"{readNewsCount}\"\n    shouldShowLogoutBtn=\"{isLoggedIn}\"\n    {handleLogoutClick}\n/>\n<!-- prettier-ignore -->\n<main>\n    {#if isLoggedIn === false}\n        <p class=\"centered\">\n            <button on:click={handleLoginClick}>Log in with VK</button>\n        </p>\n    {:else if news}\n        {#if news.length > 0}\n            <div class=\"top\">\n                <Feed posts={news} \n                    onPostRead={updateReadCount} \n                    {showPostSource}\n                ></Feed>\n            </div>\n        {:else}\n            <p class=\"centered\">There's nothing new in your feed! Well done!</p>\n        {/if}\n    {:else if error}\n        <p class=\"centered\" style=\"color: red;\">{error.message}</p>\n    {:else}\n        <p class=\"centered\">Loading...</p>\n    {/if}\n    \n    <div class=\"bottom\">\n        {#if isLoggedIn && news}\n            <p class=\"centered\">\n                <button on:click={markAllAsReadAndRefresh} class=\"refresh-button\">\n                    <img class=\"refresh-icon\" src=\"icons/refresh.svg\" alt=\"\">\n                </button>\n            </p>\n        {/if}\n        <p class=\"credits centered\">\n            <Credits />\n        </p>\n    </div>\n\n</main>\n{#if newsBySource}\n<Filter\n    {newsBySource}\n    total=\"{newsBySource['All'].length}\"\n    current=\"{source}\"\n    onCurrentChanged=\"{handleSourceChange}\"\n/>\n{/if}\n\n<style>\n    :global(body) {\n        padding-top: 42px;\n    }\n    main {\n        padding: 8px;\n        margin: auto;\n        max-width: 500px;\n        min-width: 300px;\n        height: 100%;\n        box-sizing: border-box;\n        display: flex;\n        flex-direction: column;\n    }\n    .bottom {\n        margin-top: auto;\n    }\n    .centered {\n        text-align: center;\n    }\n    .refresh-button {\n        width: 70%;\n        margin: 0.5em 0;\n        padding: 1em;\n    }\n    .refresh-icon {\n        width: 32px;\n    }\n    .credits {\n        margin-bottom: 8px;\n        font-size: 0.8em;\n    }\n</style>\n",
    "<script>\n    import PostLink from './PostLink.svelte';\n    import Photo from './Photo.svelte';\n    import Video from './Video.svelte';\n    export let att;\n</script>\n\n<!-- prettier-ignore -->\n<div>\n    {#if att.type === 'photo'}\n        <Photo photo={att.photo}></Photo>\n    {:else if att.type === 'video'}\n        <span>Video frame:</span>\n        <Photo photo={att.video}></Photo>\n    {:else if att.type === 'doc' && att.doc.ext === 'gif'}\n        <Video {att}></Video>\n    {:else if att.type === 'doc' && att.doc.ext === 'pdf'}\n        <p>Doc: {att.doc.title}</p>\n    {:else if att.type === 'link'}\n        <PostLink {att}></PostLink>\n    {:else if att.type === 'podcast'}\n        <p>Podcast: {att.podcast.title}</p>\n    {:else if att.type === 'podcast'}\n        <p>Unsupported attachment: {JSON.stringify(att)}</p>\n    {/if}\n</div>\n\n<style>\n    p,\n    span {\n        word-break: break-word;\n        max-width: 100%;\n        font-style: italic;\n    }\n</style>\n",
    "<script>\r\n    import { fade, fly } from 'svelte/transition';\r\n    import { quintOut } from 'svelte/easing';\r\n\r\n    export let newsBySource;\r\n    export let current;\r\n    export let total;\r\n    export let onCurrentChanged;\r\n\r\n    let showButton = true;\r\n    function toggleShowButton() {\r\n        showButton = !showButton;\r\n    }\r\n    const flyProps = {\r\n        y: 1000,\r\n        opacity: 0.5,\r\n        easing: quintOut,\r\n    };\r\n\r\n    $: onCurrentChanged(current)\r\n</script>\r\n\r\n{#if showButton}\r\n<button\r\n    on:click=\"{toggleShowButton}\"\r\n    class=\"filter-btn shadow\"\r\n    transition:fly=\"{flyProps}\"\r\n>\r\n    <img class=\"filter-icon\" src=\"icons/filter.svg\" alt=\"\" />\r\n</button>\r\n{:else}\r\n<div class=\"popup shadow\" transition:fly=\"{flyProps}\">\r\n    <div class=\"sources\">\r\n        {#each Object.keys(newsBySource) as source}\r\n        <label>\r\n            <input type=\"radio\" bind:group=\"{current}\" value=\"{source}\" />\r\n            {source} ({newsBySource[source].filter((p) => !p.seen).length})\r\n        </label>\r\n        {/each}\r\n    </div>\r\n    <button on:click=\"{toggleShowButton}\" class=\"close\">Close</button>\r\n</div>\r\n{/if}\r\n<style>\r\n    .filter-btn {\r\n        position: fixed;\r\n        bottom: 25px;\r\n        right: 25px;\r\n\r\n        width: 64px;\r\n        height: 64px;\r\n        margin: 0;\r\n        border-radius: 50%;\r\n        padding: 1em;\r\n    }\r\n    .filter-icon {\r\n        width: 100%;\r\n    }\r\n    .popup {\r\n        padding: 1em;\r\n        position: fixed;\r\n        bottom: 1%;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        background-color: white;\r\n        width: 400px;\r\n        max-width: 80%;\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n        z-index: 1;\r\n    }\r\n    .shadow {\r\n        box-shadow: 0px 0px 5px 1px rgba(0, 0, 0, 0.3);\r\n    }\r\n    .close {\r\n        margin-top: auto;\r\n    }\r\n    .sources {\r\n        margin-bottom: 1em;\r\n    }\r\n</style>\r\n",
    "<script>\r\n    export let source;\r\n    export let readCount;\r\n    export let totalCount;\r\n    export let shouldShowLogoutBtn;\r\n    export let handleLogoutClick;\r\n</script>\r\n\r\n<!-- prettier-ignore -->\r\n<nav>\r\n    {#if totalCount}\r\n        <span class=\"read-counter\">\r\n            Feed: {source} -- Read: {readCount}/{totalCount}\r\n        </span>\r\n    {/if}\r\n    {#if shouldShowLogoutBtn}\r\n        <button on:click={handleLogoutClick} class=\"logout\">\r\n            <img class=\"exit-icon\" src=\"icons/door.svg\" alt=\"\">\r\n        </button>\r\n    {/if}\r\n</nav>\r\n\r\n<style>\r\n    nav {\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: flex-end;\r\n        align-items: center;\r\n\r\n        background-color: #68a5eb;\r\n        height: 42px;\r\n\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n\r\n        z-index: 1;\r\n    }\r\n    .read-counter {\r\n        margin-left: 24px;\r\n        margin-right: auto;\r\n\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        color: #fff;\r\n    }\r\n    .logout {\r\n        margin: 0;\r\n        margin-right: 8px;\r\n        font-size: 12px;\r\n        height: 80%;\r\n    }\r\n    .exit-icon {\r\n        height: 100%;\r\n    }\r\n</style>\r\n",
    "<script>\n    import { selectPhoto } from '../utils/selectPhoto';\n\n    export let photo;\n\n    const photoSrc = selectPhoto(photo, 600);\n</script>\n\n<style>\n    img {\n        width: 100%;\n    }\n</style>\n\n<!-- prettier-ignore -->\n<img loading=\"lazy\" src={photoSrc} alt=\"\" srcset=\"\" />\n",
    "<script>\n    import { onMount, onDestroy } from 'svelte';\n    import Attachment from './Attachment.svelte';\n\n    export let post;\n    export let observer;\n    export let showPostSource;\n\n    const { postUrl, date, repost, sourceName, text, attachments, uid } = post;\n\n    let container;\n    onMount(() => {\n        if (!observer) return;\n        observer.observe(container);\n    });\n    onDestroy(() => {\n        if (!observer) return;\n        observer.unobserve(container);\n    });\n</script>\n\n<!-- prettier-ignore -->\n<div \n    bind:this={container} \n    class=\"post\"\n    class:seen={post.seen} \n    data-post-uid={uid}\n>\n    <p class=\"date\">{date}</p>\n    {#if showPostSource}\n        <h4>{sourceName}</h4>\n    {/if}\n    {#if text}\n        <p class=\"text\">{text}</p>\n    {/if}\n    {#if attachments}\n        {#each attachments as att, i}\n           <Attachment {att}></Attachment>\n        {/each}\n    {/if}\n    {#if repost}\n        <div class=\"post\">\n            <p class=\"date\">{repost.date}</p>\n            <h4>{repost.sourceName}</h4>\n            {#if repost.text}\n                <p class=\"text\">{repost.text}</p>\n            {/if}\n            {#if repost.attachments}\n                {#each repost.attachments as att, i}\n                    <Attachment {att}></Attachment>\n                {/each}\n            {/if}\n        </div>\n    {/if}\n    <p><a href={postUrl} target=\"_blank\">{postUrl}</a></p>\n</div>\n\n<style>\n    .post {\n        padding: 1em;\n        margin-bottom: 0.5em;\n        position: relative;\n        box-shadow: 0 0 3px rgb(128, 128, 128);\n    }\n    .text {\n        white-space: pre-wrap;\n        word-break: break-word;\n    }\n    .date {\n        color: #505050;\n        position: absolute;\n        top: 0.5em;\n        right: 0.5em;\n        font-size: 0.75em;\n        margin: 0;\n    }\n    .seen {\n        opacity: 0.5;\n    }\n</style>\n",
    "<script>\n    export let att;\n\n    let photoSrc;\n    if (att.link.photo) {\n        const photoSizes = Object.keys(att.link.photo).filter((k) =>\n            k.includes('photo')\n        );\n\n        // fixme replace with screensize based size\n        const medianQuality = Math.floor(photoSizes.length / 2);\n        photoSrc = att.link.photo[photoSizes[medianQuality]];\n    }\n</script>\n\n<!-- prettier-ignore -->\n<a href=\"{att.link.url}\" target=\"_blank\">\n    <div class=\"link\">\n        {#if photoSrc}\n            <img loading=\"lazy\" src=\"{photoSrc}\" alt=\"\" />\n        {/if}\n        <p>{att.link.title}</p>\n    </div>\n</a>\n\n<style>\n    img {\n        width: 100%;\n    }\n    .link {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        border: 1px solid rgba(0, 0, 0, 0.363);\n    }\n    .link img {\n        flex-shrink: 0;\n        height: 80px;\n        width: auto;\n    }\n    .link p {\n        margin: 0;\n        padding: 8px;\n    }\n</style>\n",
    "<script>\n    export let att;\n\n    // fixme choose poster based on screen size\n    const posterSrc = att.doc.preview.photo.sizes[0].src;\n    const videoSrc =\n        (att.doc.preview.video && att.doc.preview.video.src) || att.doc.url;\n</script>\n\n<style>\n    video {\n        width: 100%;\n    }\n</style>\n\n<!-- prettier-ignore -->\n<video\n    src=\"{videoSrc}\"\n    poster=\"{posterSrc}\"\n    preload=\"none\"\n    controls\n    type=\"video/mp4\"\n/>\n"
  ],
  "names": [],
  "mappings": "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"
}