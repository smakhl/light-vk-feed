{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\Attachment.svelte",
    "..\\..\\Feed.svelte",
    "..\\..\\Photo.svelte",
    "..\\..\\Post.svelte",
    "..\\..\\PostLink.svelte",
    "..\\..\\Video.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import Feed from './components/Feed.svelte';\n    import { login, logout, getIsLoggedIn } from './vk/auth';\n    import { getNews } from './vk/data/news';\n    import { groupBy } from './utils/groupBy';\n    import { makeDateFromUnixTime } from './utils/makeDateFromUnixTime';\n    import { hasPostBeenSeen } from './storage';\n\n    let error;\n    let isLoggedIn;\n    let news;\n    // let newsBySources;\n\n    (async () => {\n        try {\n            isLoggedIn = await getIsLoggedIn();\n            if (isLoggedIn) {\n                const _news = await getNews();\n                news = _news.filter((n) => !hasPostBeenSeen(n.post_uid));\n                // const lastPost = news[news.length - 1];\n                // console.log('lastPost', lastPost);\n                // const lastPostDate = makeDateFromUnixTime(lastPost.date);\n                // console.log(lastPostDate);\n                // newsBySources = groupBy(news, 'source_name');\n                // console.log(newsBySources);\n            }\n        } catch (e) {\n            error = JSON.stringify(e);\n        }\n    })();\n\n    async function handleLogoutClick() {\n        await logout();\n        isLoggedIn = false;\n        news = undefined;\n    }\n\n    async function handleLoginClick() {\n        try {\n            isLoggedIn = await login();\n            if (isLoggedIn) {\n                news = await getNews();\n            }\n        } catch (e) {\n            error = JSON.stringify(e);\n        }\n    }\n\n    let readNewsCount = 0;\n    function handlePostRead() {\n        readNewsCount = news.filter((n) => n.seen).length;\n    }\n</script>\n\n<!-- prettier-ignore -->\n<div>\n    <nav>\n        {#if news}\n            <span class=\"read-counter\">\n                {readNewsCount}/{news.length}\n            </span>\n        {/if}\n        {#if isLoggedIn}\n            <button on:click={handleLogoutClick} id=\"logout\">Logout</button>\n        {/if}\n    </nav>\n    {#if isLoggedIn === false}\n        <p class=\"login-wrapper\">\n            <button on:click={handleLoginClick} id=\"login\">Log in VK</button>\n        </p>\n    {:else if news}\n        <!-- {#each Object.keys(newsBySources) as source, i}\n            <details>\n                <summary>{source} ({newsBySources[source].length})</summary>\n                <Feed news={newsBySources[source]}></Feed>\n            </details>\n        {/each} -->\n        <main>\n            <Feed {news} onPostRead={handlePostRead}></Feed>\n        </main>\n    {:else if error}\n        <p style=\"color: red;\">{error.message}</p>\n    {:else}\n        <p>...loading</p>\n    {/if}\n</div>\n\n<style>\n    nav {\n        display: flex;\n        flex-direction: row;\n        justify-content: flex-end;\n        align-items: center;\n\n        background-color: #68a5eb;\n        height: 42px;\n\n        position: fixed;\n        left: 0;\n        right: 0;\n        top: 0;\n        z-index: 1;\n    }\n    .read-counter {\n        color: #fff;\n        margin-left: 24px;\n        margin-right: auto;\n    }\n    main {\n        margin-top: 42px;\n    }\n    #logout {\n        margin: 0;\n        margin-right: 8px;\n        font-size: 12px;\n    }\n    .login-wrapper {\n        text-align: center;\n    }\n</style>\n",
    "<script>\n    import PostLink from './PostLink.svelte';\n    import Photo from './Photo.svelte';\n    import Video from './Video.svelte';\n    export let att;\n</script>\n\n<!-- prettier-ignore -->\n<div>\n    {#if att.type === 'photo'}\n        <Photo photo={att.photo}></Photo>\n    {:else if att.type === 'video'}\n        Video frame:\n        <Photo photo={att.video}></Photo>\n    {:else if att.type === 'doc' && att.doc.ext === 'gif'}\n        <Video {att}></Video>\n    {:else if att.type === 'link'}\n        <PostLink {att}></PostLink>\n    {:else}\n        <p>Unsupported attachment: {JSON.stringify(att)}</p>\n    {/if}\n</div>\n\n<style>\n    p {\n        word-break: break-word;\n        max-width: 100%;\n    }\n</style>\n",
    "<script>\n    import Post from './Post.svelte';\n    import { markPostSeen } from '../storage';\n    export let news;\n    export let onPostRead;\n\n    history.scrollRestoration = 'manual';\n\n    const handler = (entries, observer) => {\n        entries.forEach((entry) => {\n            const { boundingClientRect, isIntersecting, target } = entry;\n\n            if (!isIntersecting && boundingClientRect.bottom <= 0) {\n                const { postUid } = target.dataset;\n                news.find((n) => n.post_uid === postUid).seen = true;\n                news = news;\n\n                markPostSeen(postUid);\n                onPostRead();\n\n                observer.unobserve(target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(handler, { threshold: 0 });\n</script>\n\n<style>\n    .feed {\n        padding: 8px;\n    }\n</style>\n\n<!-- prettier-ignore -->\n<div class=\"feed\">\n    {#each news as item, i}\n        <Post {item} observer={observer} />\n    {/each}\n</div>\n",
    "<script>\n    import { selectPhoto } from '../utils/selectPhoto';\n\n    export let photo;\n\n    const photoSrc = selectPhoto(photo, 600);\n</script>\n\n<style>\n    img {\n        width: 100%;\n    }\n</style>\n\n<!-- prettier-ignore -->\n<img loading=\"lazy\" src={photoSrc} alt=\"\" srcset=\"\" />\n",
    "<script>\n    import { onMount, onDestroy } from 'svelte';\n    import { makeDateFromUnixTime } from '../utils/makeDateFromUnixTime';\n    import Attachment from './Attachment.svelte';\n\n    export let item;\n    export let observer;\n\n    let container;\n    onMount(() => {\n        if (!observer) return;\n        observer.observe(container);\n    });\n    onDestroy(() => {\n        if (!observer) return;\n        observer.unobserve(container);\n    });\n\n    const postUrl = `https://vk.com/wall${item.post_uid}`;\n    const formatDate = (date) =>\n        makeDateFromUnixTime(date).toLocaleString('ru');\n    const date = formatDate(item.date);\n    const repost = item.copy_history && item.copy_history[0];\n    const repostDate = repost && formatDate(repost.date);\n</script>\n\n<!-- prettier-ignore -->\n<div \n    bind:this={container} \n    class=\"post\"\n    class:seen={item.seen}\n    data-post-uid={item.post_uid}\n>\n    <p class=\"date\">{date}</p>\n    <h4>{item.source_name}</h4>\n    {#if item.text}\n        <p class=\"text\">{item.text}</p>\n    {/if}\n    {#if item.attachments}\n        {#each item.attachments as att, i}\n           <Attachment {att}></Attachment>\n        {/each}\n    {/if}\n    {#if repost}\n        <div class=\"post\">\n            <p class=\"date\">{repostDate}</p>\n            <h4>{repost.source_name}</h4>\n            {#if repost.text}\n                <p class=\"text\">{repost.text}</p>\n            {/if}\n            {#if repost.attachments}\n                {#each repost.attachments as att, i}\n                    <Attachment {att}></Attachment>\n                {/each}\n            {/if}\n        </div>\n    {/if}\n    <p><a href={postUrl} target=\"_blank\">{postUrl}</a></p>\n</div>\n\n<style>\n    .post {\n        padding: 1em;\n        margin-bottom: 0.5em;\n        position: relative;\n        box-shadow: 0 0 3px rgb(128, 128, 128);\n    }\n    .text {\n        white-space: pre-wrap;\n        word-break: break-word;\n    }\n    .date {\n        color: #505050;\n        position: absolute;\n        top: 0.5em;\n        right: 0.5em;\n        font-size: 0.75em;\n        margin: 0;\n    }\n    .seen {\n        opacity: 0.5;\n    }\n</style>\n",
    "<script>\n    export let att;\n\n    let photoSrc;\n    if (att.link.photo) {\n        const photoSizes = Object.keys(att.link.photo).filter((k) =>\n            k.includes('photo')\n        );\n\n        // fixme replace with screensize based size\n        const medianQuality = Math.floor(photoSizes.length / 2);\n        photoSrc = att.link.photo[photoSizes[medianQuality]];\n    }\n</script>\n\n<!-- prettier-ignore -->\n<a href=\"{att.link.url}\" target=\"_blank\">\n    <div class=\"link\">\n        {#if photoSrc}\n            <img loading=\"lazy\" src=\"{photoSrc}\" alt=\"\" />\n        {/if}\n        <p>{att.link.title}</p>\n    </div>\n</a>\n\n<style>\n    img {\n        width: 100%;\n    }\n    .link {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        border: 1px solid rgba(0, 0, 0, 0.363);\n    }\n    .link img {\n        flex-shrink: 0;\n        height: 80px;\n        width: auto;\n    }\n    .link p {\n        margin: 0;\n        padding: 8px;\n    }\n</style>\n",
    "<script>\n    export let att;\n\n    // fixme choose poster based on screen size\n    const posterSrc = att.doc.preview.photo.sizes[0].src;\n    const videoSrc =\n        (att.doc.preview.video && att.doc.preview.video.src) || att.doc.url;\n</script>\n\n<style>\n    video {\n        width: 100%;\n    }\n</style>\n\n<!-- prettier-ignore -->\n<video\n    src=\"{videoSrc}\"\n    poster=\"{posterSrc}\"\n    preload=\"none\"\n    controls\n    type=\"video/mp4\"\n/>\n"
  ],
  "names": [],
  "mappings": "AAwFI,GAAG,cAAC,CAAC,AACD,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,eAAe,CAAE,QAAQ,CACzB,WAAW,CAAE,MAAM,CAEnB,gBAAgB,CAAE,OAAO,CACzB,MAAM,CAAE,IAAI,CAEZ,QAAQ,CAAE,KAAK,CACf,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,GAAG,CAAE,CAAC,CACN,OAAO,CAAE,CAAC,AACd,CAAC,AACD,aAAa,cAAC,CAAC,AACX,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,IAAI,CACjB,YAAY,CAAE,IAAI,AACtB,CAAC,AACD,IAAI,cAAC,CAAC,AACF,UAAU,CAAE,IAAI,AACpB,CAAC,AACD,OAAO,cAAC,CAAC,AACL,MAAM,CAAE,CAAC,CACT,YAAY,CAAE,GAAG,CACjB,SAAS,CAAE,IAAI,AACnB,CAAC,AACD,cAAc,cAAC,CAAC,AACZ,UAAU,CAAE,MAAM,AACtB,CAAC;AC9FD,CAAC,cAAC,CAAC,AACC,UAAU,CAAE,UAAU,CACtB,SAAS,CAAE,IAAI,AACnB,CAAC;ACCD,KAAK,eAAC,CAAC,AACH,OAAO,CAAE,GAAG,AAChB,CAAC;ACrBD,GAAG,aAAC,CAAC,AACD,KAAK,CAAE,IAAI,AACf,CAAC;ACkDD,KAAK,cAAC,CAAC,AACH,OAAO,CAAE,GAAG,CACZ,aAAa,CAAE,KAAK,CACpB,QAAQ,CAAE,QAAQ,CAClB,UAAU,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AAC1C,CAAC,AACD,KAAK,cAAC,CAAC,AACH,WAAW,CAAE,QAAQ,CACrB,UAAU,CAAE,UAAU,AAC1B,CAAC,AACD,KAAK,cAAC,CAAC,AACH,KAAK,CAAE,OAAO,CACd,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,KAAK,CACV,KAAK,CAAE,KAAK,CACZ,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,CAAC,AACb,CAAC,AACD,KAAK,cAAC,CAAC,AACH,OAAO,CAAE,GAAG,AAChB,CAAC;ACvDD,GAAG,4BAAC,CAAC,AACD,KAAK,CAAE,IAAI,AACf,CAAC,AACD,KAAK,4BAAC,CAAC,AACH,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,AAC1C,CAAC,AACD,mBAAK,CAAC,GAAG,cAAC,CAAC,AACP,WAAW,CAAE,CAAC,CACd,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,AACf,CAAC,AACD,mBAAK,CAAC,CAAC,cAAC,CAAC,AACL,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,GAAG,AAChB,CAAC;ACjCD,KAAK,eAAC,CAAC,AACH,KAAK,CAAE,IAAI,AACf,CAAC"
}